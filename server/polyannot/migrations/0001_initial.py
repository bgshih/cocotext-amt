# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2017-07-06 19:46
from __future__ import unicode_literals

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('common', '0004_auto_20170706_1946'),
    ]

    operations = [
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('type', models.CharField(choices=[('ST', 'Static'), ('HI', 'Hint'), ('SE', 'Sentinel')], max_length=2)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('image_id_list', django.contrib.postgres.fields.jsonb.JSONField()),
                ('image_id_list_idx', models.PositiveIntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectWorker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('mturk_worker', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='polyannot_worker', to='common.MturkWorker')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_workers', to='polyannot.Project')),
            ],
        ),
        migrations.CreateModel(
            name='Response',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('polygon', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('content', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='polyannot.Content')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('answer', django.contrib.postgres.fields.jsonb.JSONField()),
                ('assignment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='polyannot_submission', to='common.MturkAssignment')),
                ('project_worker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='polyannot.ProjectWorker')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('hints', django.contrib.postgres.fields.jsonb.JSONField()),
                ('hit', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='polyannot_task', to='common.MturkHit')),
                ('image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='common.CocoTextImage')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='polyannot.Project')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='submission',
            name='task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='polyannot.Task'),
        ),
        migrations.AddField(
            model_name='response',
            name='submission',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='polyannot.Submission'),
        ),
        migrations.AddField(
            model_name='response',
            name='task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='polyannot.Task'),
        ),
        migrations.AddField(
            model_name='response',
            name='text_instance',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polyannot_response', to='common.CocoTextInstance'),
        ),
        migrations.AddField(
            model_name='response',
            name='worker',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='polyannot.ProjectWorker'),
        ),
        migrations.AddField(
            model_name='content',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contents', to='polyannot.Project'),
        ),
        migrations.AddField(
            model_name='content',
            name='tasks',
            field=models.ManyToManyField(related_name='contents', to='polyannot.Task'),
        ),
        migrations.AddField(
            model_name='content',
            name='text_instance',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='polyannot_content', to='common.CocoTextInstance'),
        ),
        migrations.AlterUniqueTogether(
            name='submission',
            unique_together=set([('task', 'project_worker')]),
        ),
        migrations.AlterUniqueTogether(
            name='projectworker',
            unique_together=set([('mturk_worker', 'project')]),
        ),
    ]

# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2017-07-03 17:08
from __future__ import unicode_literals

import datetime
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CocoTextImage',
            fields=[
                ('added', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('id', models.CharField(max_length=128, primary_key=True, serialize=False)),
                ('filename', models.CharField(max_length=256)),
                ('width', models.PositiveIntegerField()),
                ('height', models.PositiveIntegerField()),
                ('set', models.CharField(choices=[('TRN', 'Training'), ('VAL', 'Validation'), ('TST', 'Test')], max_length=3)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CocoTextInstance',
            fields=[
                ('added', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('id', models.CharField(max_length=128, primary_key=True, serialize=False)),
                ('polygon', django.contrib.postgres.fields.jsonb.JSONField()),
                ('text', models.CharField(max_length=256, null=True)),
                ('language', models.CharField(max_length=128, null=True)),
                ('legibility', models.CharField(choices=[('L', 'Legible'), ('I', 'Illegible')], max_length=1)),
                ('text_class', models.CharField(choices=[('M', 'MachinePrinted'), ('H', 'Handwritten'), ('O', 'Others')], max_length=1, null=True)),
                ('from_v1', models.BooleanField(default=False)),
                ('polygon_verification', models.CharField(choices=[('U', 'Unverified'), ('C', 'Correct'), ('W', 'Wrong')], default='U', max_length=1)),
                ('text_verification', models.CharField(choices=[('U', 'Unverified'), ('C', 'Correct'), ('W', 'Wrong')], default='U', max_length=1)),
                ('legibility_verification', models.CharField(choices=[('U', 'Unverified'), ('C', 'Correct'), ('W', 'Wrong')], default='U', max_length=1)),
                ('language_verification', models.CharField(choices=[('U', 'Unverified'), ('C', 'Correct'), ('W', 'Wrong')], default='U', max_length=1)),
                ('image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.CocoTextImage')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MturkAssignment',
            fields=[
                ('added', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('id', models.CharField(max_length=128, primary_key=True, serialize=False)),
                ('assignment_status', models.CharField(choices=[('S', 'Submitted'), ('A', 'Approved'), ('R', 'Rejected')], max_length=1)),
                ('auto_approval_time', models.DateTimeField(null=True)),
                ('accept_time', models.DateTimeField(null=True)),
                ('submit_time', models.DateTimeField(null=True)),
                ('approval_time', models.DateTimeField(null=True)),
                ('rejection_time', models.DateTimeField(null=True)),
                ('deadline', models.DateTimeField(null=True)),
                ('answer_xml', models.TextField(null=True)),
                ('requester_feedback', models.TextField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MturkHit',
            fields=[
                ('added', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('id', models.CharField(max_length=128, primary_key=True, serialize=False)),
                ('hit_layout_id', models.CharField(max_length=128, null=True)),
                ('hit_layout_parameters', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('hit_group_id', models.CharField(max_length=128)),
                ('creation_time', models.DateTimeField()),
                ('hit_status', models.CharField(choices=[('A', 'Assignable'), ('U', 'Unassignable'), ('R', 'Reviewable'), ('E', 'Reviewing'), ('D', 'Disposed')], max_length=1)),
                ('max_assignments', models.PositiveSmallIntegerField()),
                ('lifetime', models.DurationField()),
                ('question', models.TextField()),
                ('expiration', models.DateTimeField()),
                ('requester_annotation', models.TextField(null=True)),
                ('unique_request_token', models.CharField(max_length=128, null=True)),
                ('hit_review_status', models.CharField(choices=[('N', 'NotReviewed'), ('M', 'MarkedForReview'), ('A', 'ReviewedAppropriate'), ('I', 'ReviewedInappropriate')], max_length=1)),
                ('num_assignments_pending', models.PositiveSmallIntegerField()),
                ('num_assignments_available', models.PositiveSmallIntegerField()),
                ('num_assignments_completed', models.PositiveSmallIntegerField()),
                ('assignment_review_policy', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('hit_review_policy', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MturkHitType',
            fields=[
                ('added', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('id', models.CharField(max_length=128, primary_key=True, serialize=False)),
                ('auto_approval_delay', models.DurationField(default=datetime.timedelta(14))),
                ('assignment_duration', models.DurationField(default=datetime.timedelta(0, 3600))),
                ('reward', models.DecimalField(decimal_places=2, max_digits=4)),
                ('title', models.CharField(max_length=256)),
                ('keywords', models.CharField(max_length=256)),
                ('description', models.TextField()),
                ('qrequirements', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MturkWorker',
            fields=[
                ('added', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('id', models.CharField(max_length=128, primary_key=True, serialize=False)),
                ('blocked', models.BooleanField(default=False)),
                ('block_reason', models.TextField()),
                ('unblock_reason', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='QualificationRequest',
            fields=[
                ('added', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('id', models.CharField(max_length=128, primary_key=True, serialize=False)),
                ('test', models.TextField()),
                ('answer', models.TextField()),
                ('submit_time', models.DateTimeField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='QualificationType',
            fields=[
                ('added', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('id', models.CharField(max_length=128, primary_key=True, serialize=False)),
                ('creation_time', models.DateTimeField()),
                ('name', models.CharField(max_length=64)),
                ('keywords', models.CharField(max_length=256)),
                ('description', models.TextField()),
                ('qtype_status', models.CharField(choices=[('A', 'Active'), ('I', 'Inactive')], default='A', max_length=1)),
                ('test', models.TextField()),
                ('test_duration', models.DurationField()),
                ('answer_key', models.TextField(null=True)),
                ('retry_delay', models.DurationField()),
                ('is_requestable', models.BooleanField()),
                ('auto_granted', models.BooleanField()),
                ('auto_granted_value', models.IntegerField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='qualificationrequest',
            name='qtype',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.QualificationType'),
        ),
        migrations.AddField(
            model_name='qualificationrequest',
            name='worker',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.MturkWorker'),
        ),
        migrations.AddField(
            model_name='mturkhit',
            name='hit_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.MturkHitType'),
        ),
        migrations.AddField(
            model_name='mturkassignment',
            name='hit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.MturkHit'),
        ),
        migrations.AddField(
            model_name='mturkassignment',
            name='worker',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.MturkWorker'),
        ),
    ]
